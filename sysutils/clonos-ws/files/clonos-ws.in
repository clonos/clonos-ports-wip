#!/bin/sh

# PROVIDE: clonos_ws
# REQUIRE: NETWORK
# BEFORE: DAEMON

. /etc/rc.subr

name="clonos_ws"
desc="Agent daemon for ClonOS ws"
rcvar="clonos_ws_enable"
pidfile="/var/run/${name}.pid"
daemon_pidfile="/var/run/${name}-daemon.pid"
logdir="/var/log/${name}"
logfile="${logdir}/clonos_ws.log"
command="%%PREFIX%%/bin/clonos-ws"
#clonos_ws_args=${clonos_ws_args-"--remoteWrite.tmpDataPath=/tmp --promscrape.config=%%PREFIX%%/etc/prometheus/prometheus.yml --remoteWrite.url=http://127.0.0.1:8429/api/v1/write -httpListenAddr=:9429 --memory.allowedPercent=80"}
clonos_ws_user="www"
load_rc_config ${name}

#restart_precmd="checkconfig"
#start_precmd="checkconfig"
#checkconfig_cmd="checkconfig"
start_cmd="start"
stop_cmd="stop"
status_cmd="status"
#extra_commands="checkconfig reload"

checkconfig()
{
        local _ret

        /usr/bin/su -m ${clonos_ws_user} -c "${command} ${clonos_ws_args} -promscrape.config.dryRun" > /dev/null 2>&1
        _ret=$?
        if [ ${_ret} -ne 0 ]; then
                echo "${name} checkconfig failed:"
                echo "/usr/bin/su -m ${clonos_ws_user} -c \"${command} ${clonos_ws_args} -promscrape.config.dryRun\""
                exit ${_ret}
        fi
}

start()
{
	[ ! -d ${logdir} ] && mkdir -p ${logdir}
	touch ${logfile}
	chown ${clonos_ws_user} ${logdir} ${logfile}
	/usr/sbin/daemon -u ${clonos_ws_user} -f -R5 -p ${pidfile} -P ${daemon_pidfile} -o ${logfile} ${command} ${clonos_ws_args}
}

stop()
{
	if [ -f "${daemon_pidfile}" ]; then
		pids=$( pgrep -F ${daemon_pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq 0 ] && kill -9 ${pids} && /bin/rm -f ${daemon_pidfile}
	fi
	if [ -f "${pidfile}" ]; then
		pids=$( pgrep -F ${pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq 0 ] && kill -9 ${pids} && /bin/rm -f ${pidfile}
	fi
}

status()
{
        if [ -f "${pidfile}" ]; then
                pids=$( pgrep -F ${pidfile} 2>&1 )
                _err=$?
                if [ ${_err} -eq 0 ]; then
                        echo "${name} is running as pid ${pids}"
                        exit 0
                else
                        echo "wrong pid: ${pids}"
                        exit 1
                fi
        else
                echo "no pidfile $pidfile"
                exit 1
        fi
}

run_rc_command "$1"
